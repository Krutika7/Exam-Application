// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QuizApp.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Quizapp")]
    public partial class QuizappFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Quizapp.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Quizapp", "\tOnline quiz website", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dashboard verification")]
        [NUnit.Framework.CategoryAttribute("Dashboard_verification")]
        public virtual void DashboardVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dashboard verification", null, new string[] {
                        "Dashboard_verification"});
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.Given("Navigate to website\'s dashboard URL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Then("User should be in the dashboard page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And("the Dashboard menu should contain Dashboard,Candidate,Group,Subject,Question,Exam" +
                    ",Result,Exam Proctoring and Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("the header should display the portal name on the left", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.And("there should be an event displayed in the bottom right corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("When click on Today, today\'s exams should appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("When click on Upcoming Exams, upcoming exams should appear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying the Group Module")]
        [NUnit.Framework.CategoryAttribute("Verifing")]
        [NUnit.Framework.CategoryAttribute("Group")]
        [NUnit.Framework.CategoryAttribute("Module")]
        public virtual void VerifyingTheGroupModule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying the Group Module", null, new string[] {
                        "Verifing",
                        "Group",
                        "Module"});
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 42
   testRunner.Given("Navigate to the Dashbaord Url and click on Group from the left menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
   testRunner.Then("Add Group page should open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
   testRunner.And("Add new group by filling the group name, Total number of candidates, click on can" +
                    "didate button and select candidates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
   testRunner.And("Add all the details and click on reset button to verify the reset button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
   testRunner.Then("Group should be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
   testRunner.And("Click on edit to edit the Group details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
   testRunner.And("Click on Delete to delete the Group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying the Subject Module")]
        [NUnit.Framework.CategoryAttribute("Verifying")]
        [NUnit.Framework.CategoryAttribute("Subject")]
        [NUnit.Framework.CategoryAttribute("Module")]
        public virtual void VerifyingTheSubjectModule()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying the Subject Module", null, new string[] {
                        "Verifying",
                        "Subject",
                        "Module"});
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 52
   testRunner.Given("Navigate to the Dashbaord Url and click on Subject from the left menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
   testRunner.Then("Add Subject page should open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
   testRunner.And("Add new Subject by filling the Subject name and description", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
   testRunner.And("Fill subject name and description and click on reset button to verify the reset b" +
                    "utton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
   testRunner.Then("Subject should be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
   testRunner.And("Click on edit to edit the Subject name  and description", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
   testRunner.And("Click on Delete to delete the Subject", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying the Candidate Module")]
        [NUnit.Framework.CategoryAttribute("Verifing")]
        [NUnit.Framework.CategoryAttribute("Candidate")]
        [NUnit.Framework.CategoryAttribute("Module")]
        [NUnit.Framework.TestCaseAttribute("NCTest User", "NCTestuser12", "NCtestUser12@gmail.com", "8898767898", "Mumbai", new string[] {
                "Source:Credentials.xlsx:sheet2"}, Category="Source:Credentials.xlsx:sheet2")]
        public virtual void VerifyingTheCandidateModule(string name, string username, string email, string phone, string address, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Verifing",
                    "Candidate",
                    "Module"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying the Candidate Module", null, @__tags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
   testRunner.Given("Navigate to the Dashbaord Url and click on Candidate from the left menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
   testRunner.Then("Add Candidate page should open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
   testRunner.And(string.Format("Fill the Name{0}, Username{1}, Email{2}, Phone No{3}, Address{4}", name, username, email, phone, address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.And("Click on Add Candidate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
   testRunner.Then("Candidate should be added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
   testRunner.And("Add all the details and click on reset button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
   testRunner.Then("Add Candidate field should be clear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
   testRunner.And("Click on View icon to view the candidate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
   testRunner.And("Click on edit to edit the candidate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
   testRunner.And("Click on Delete to delete the candidate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
